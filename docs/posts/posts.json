[
  {
    "path": "posts/2022-03-23-regression-model/",
    "title": "Regression model",
    "description": "In this blog post I will be going over step by step on how to fit a regression model in the tidy model framework.",
    "author": [
      {
        "name": "Joshua Vong",
        "url": {
          "https://www.tandfonline.com/doi/full/10.1080/00194506.2020.1855085": {}
        }
      }
    ],
    "date": "2022-03-23",
    "categories": [],
    "contents": "\r\nThe first thing I did was load up some libraries so that we are able to use the functions and data that comes with them.\r\n\r\n\r\nlibrary(tidymodels)  # for the parsnip package, along with the rest of tidymodels\r\n\r\n# Helper packages\r\nlibrary(readr)       # for importing data\r\nlibrary(broom.mixed) # for converting bayesian models to tidy tibbles\r\nlibrary(dotwhisker)  # for visualizing regression results\r\n\r\n\r\n\r\nThen the data is loaded with the read_csv function, the data that we will be using is the urchin data set. With the data set we will be doing some modifications such as changing the names of some variables with setNames function to make it more verbose and using the mutate function to factor the food regime into different categories such as initial, low, or high.\r\n\r\n\r\nurchins <-\r\n  # Data were assembled for a tutorial \r\n  # at https://www.flutterbys.com.au/stats/tut/tut7.5a.html\r\n  read_csv(\"https://tidymodels.org/start/models/urchins.csv\") %>% \r\n  # Change the names to be a little more verbose\r\n  setNames(c(\"food_regime\", \"initial_volume\", \"width\")) %>% \r\n  # Factors are very helpful for modeling, so we convert one column\r\n  mutate(food_regime = factor(food_regime, levels = c(\"Initial\", \"Low\", \"High\")))\r\n\r\nurchins\r\n\r\n\r\n# A tibble: 72 x 3\r\n   food_regime initial_volume width\r\n   <fct>                <dbl> <dbl>\r\n 1 Initial                3.5 0.01 \r\n 2 Initial                5   0.02 \r\n 3 Initial                8   0.061\r\n 4 Initial               10   0.051\r\n 5 Initial               13   0.041\r\n 6 Initial               13   0.061\r\n 7 Initial               15   0.041\r\n 8 Initial               15   0.071\r\n 9 Initial               16   0.092\r\n10 Initial               17   0.051\r\n# ... with 62 more rows\r\n\r\nHere’s a graph for exploring the data involving the initial volume and width grouped by food regime. In terms of plotting we use a point like graph along with a smooth line that uses lm method, which means linear model. Looking at the graph it plots the points in which the three groups of food regime are plotted. The smooth line added goes through the graph with linear model in mind.\r\n\r\n\r\nggplot(urchins,\r\n       aes(x = initial_volume, \r\n           y = width, \r\n           group = food_regime, \r\n           col = food_regime)) + \r\n  geom_point() + \r\n  geom_smooth(method = lm)\r\n\r\n\r\n\r\n\r\nIn this section we create a variable called lm_mod that uses linear regression with a set engine of lm. Then create another variable called lm_fit that uses the previous lm_mod variable along with a fitting a linear regression involving the variables width, initial_volume, and food_regime. From this section we’re able to have a linear model fit.\r\n\r\n\r\nlm_mod <- \r\n  linear_reg() %>% \r\n  set_engine(\"lm\")\r\n\r\nlm_fit <- \r\n  lm_mod %>% \r\n  fit(width ~ initial_volume * food_regime, data = urchins)\r\n\r\n\r\n\r\nHere a variable called new_points were created, in new_points we use the function expand.grid, which created a data frame with the values that can be formed with a combination of vectors or factors passed in. Passing in initial volume starting at 20, along with food_regime with combing the categories. Then another variable is created in which we will use the predict function. Inside the predict function we use the linear model fit variable created from before along with the new_data being the new_points we just created in this section. when calling our mean_pred variable we get a prediction regarding our categories from our data. Another variable is created for an interval of a upper bound and lower bound prediction. Our function will be the same the only difference is that the type will be a conf_int, which is a confidence interval. When printing it out it will produce an upper and lower bounf prediction.\r\n\r\n\r\nnew_points <- expand.grid(initial_volume = 20, \r\n                          food_regime = c(\"Initial\", \"Low\", \"High\"))\r\nmean_pred <- predict(lm_fit, new_data = new_points)\r\nmean_pred\r\n\r\n\r\n# A tibble: 3 x 1\r\n   .pred\r\n   <dbl>\r\n1 0.0642\r\n2 0.0588\r\n3 0.0961\r\n\r\nconf_int_pred <- predict(lm_fit, \r\n                         new_data = new_points, \r\n                         type = \"conf_int\")\r\nconf_int_pred\r\n\r\n\r\n# A tibble: 3 x 2\r\n  .pred_lower .pred_upper\r\n        <dbl>       <dbl>\r\n1      0.0555      0.0729\r\n2      0.0499      0.0678\r\n3      0.0870      0.105 \r\n\r\nIn this section we will combine both predictions in order to plot a graph to visualize where the prediction will lie. Creating a variable that takes in the new_points with bind_cols that takes in the prediction variables. This will bind the two prediction variables together. With this new data we can finally plot the data. A new function for this graph is the involvement of the geom_errorbar, which takes in a ymin and ymax with .pred_lower and .pred_upper corresponding min and max. This is to have a limit where the prediction could only fall in the intervals.\r\n\r\n\r\n# Now combine: \r\nplot_data <- \r\n  new_points %>% \r\n  bind_cols(mean_pred) %>% \r\n  bind_cols(conf_int_pred)\r\n\r\n# and plot:\r\nggplot(plot_data, aes(x = food_regime)) + \r\n  geom_point(aes(y = .pred)) + \r\n  geom_errorbar(aes(ymin = .pred_lower, \r\n                    ymax = .pred_upper),\r\n                width = .2) + \r\n  labs(y = \"urchin size\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-23-regression-model/regression-model_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-03-23T04:57:22-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-11-role-of-data-science-during-covid/",
    "title": "Role of data science during covid",
    "description": "During the beginnings of covid how was data scientist using their skills?",
    "author": [
      {
        "name": "Joshua Vong",
        "url": {
          "https://www.tandfonline.com/doi/full/10.1080/00194506.2020.1855085": {}
        }
      }
    ],
    "date": "2022-02-11",
    "categories": [],
    "contents": "\r\nArticle URL:https://www.tandfonline.com/doi/full/10.1080/00194506.2020.1855085\r\nAround December of 2019, the first case of COVID-19 was reported in mainland China, since then it spread and changed how we interacted with businesses,schools,relationships, etc. During this time the role of data scientists would become critical in the fight against COVID-19. The article I linked, describes what data scientist had to go through and what techniques were used for COVID-19. In the article it mentions that data scientist are crucial when it comes to assisting medical research and monitoring real time spreading of COVID-19. Personally I think this is pretty neat, the idea of helping those through data is a concept that I’m unfamiliar to. I always thought data scientists were more of a business aspect rather then medical research, but I was wrong. The article also mentions that the use of A.I. helped in modeling predictions for COVID-19. It helped provide useful insights to the spread of COVID-19. Overall, I like the idea of data scientists putting their skills into helping people, it may not seem like much compared to doctors or nurses, but information is important, especially when the world is going through an epidemic.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-11T01:17:59-08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "First blog",
    "description": "Hey there welcome to my blog, I hope you enjoy the things I will be posting",
    "author": [
      {
        "name": "Joshua Vong",
        "url": {}
      }
    ],
    "date": "2022-02-08",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-11T00:13:36-08:00",
    "input_file": {}
  }
]
